name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch
  pull_request:
    branches:
      - main # Optional: Also trigger on pull requests to 'main' for early feedback

jobs:
  build_and_push: # Renamed job for clarity
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    permissions:
      contents: read # Allow checkout action to read repository contents
      packages: write # If pushing to GitHub Packages
      id-token: write # If using OIDC for cloud provider authentication later

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Use v4 for the latest features and security updates

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Recommended for multi-platform builds and caching

      - name: Log in to Docker Hub
        # Only run this step if DOCKER_USERNAME and DOCKER_PASSWORD secrets are set.
        # This prevents the workflow from failing if you only want to build locally for some runs.
        if: github.event_name != 'pull_request' && secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD
        uses: docker/login-action@v3 # Use v3 for latest features and security updates
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5 # Use v5 for latest features and security updates
        with:
          context: . # Build context is the current directory (where Dockerfile resides)
          push: ${{ github.event_name != 'pull_request' }} # Only push on 'push' events, not 'pull_request'
          tags: ${{ secrets.DOCKER_USERNAME }}/as1:latest # Tag the image with latest
          # Add more tags if needed, e.g., for versioning:
          # tags: |
          #   ${{ secrets.DOCKER_USERNAME }}/flask-demo:latest
          #   ${{ secrets.DOCKER_USERNAME }}/flask-demo:${{ github.sha }} # Tag with commit SHA for unique versions
          cache-from: type=gha,scope=${{ github.workflow }} # Use GitHub Actions cache for faster builds
          cache-to: type=gha,scope=${{ github.workflow }},mode=max # Cache layers for future builds

      # Optional: Add a step to notify or deploy after successful build and push
      # - name: Deploy to wherever
      #   run: echo "Deployment step would go here"